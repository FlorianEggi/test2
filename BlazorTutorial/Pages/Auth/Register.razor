@page "/auth/register"
@layout AuthLayout
@using Webshop.Shared.Models.Requests

@inject AuthenticationService authService
@inject NavigationManager navigationManager
<div class="row">
    <div class="col-12">
        <h2>Neuen Benutzer erstellen</h2>
        <EditForm Model="model" OnValidSubmit="RegisterUser">
            <RadzenCard>
                <DataAnnotationsValidator>

                </DataAnnotationsValidator>
                <ValidationSummary />
                @*<label>Vorname</label>
                <RadzenTextBox @bind-Value="model.FirstName"></RadzenTextBox>

                <label>Nachname</label>
                <RadzenTextBox @bind-Value="model.LastName"></RadzenTextBox>*@

                <label>Email</label>
                <RadzenTextBox @bind-Value="model.Mail"></RadzenTextBox>

                <label>Passwort</label>
                <RadzenPassword @bind-Value="model.Password"></RadzenPassword>

                @*<label>Password bestätigen</label>
                <RadzenTextBox @bind-Value="model.ConfirmPassword"></RadzenTextBox>*@

                <hr />
                <RadzenButton ButtonType="Radzen.ButtonType.Submit" Text="Registrieren" ButtonStyle="Radzen.ButtonStyle.Primary" class="btn-block mr-2"
                              Disabled="isBusy">


                </RadzenButton>

                <RadzenButton ButtonType="Radzen.ButtonType.Button" Text="Anmelden" ButtonStyle="Radzen.ButtonStyle.Secondary" class="btn-block mr-2">


                </RadzenButton>
            </RadzenCard>
        </EditForm> 
    </div>
</div>
@code {
    RegisterRequest model = new RegisterRequest();

    bool isBusy = false;

    public async Task RegisterUser()
    {
        isBusy = true;
        string message = string.Empty;

        var result = await authService.RegisterUserAsync(model);
        Console.WriteLine(result.Status);
        //if(result.Status)
        //{

        //}
        //else
        //{

        //}
        message = result.Data.First();

        isBusy = false;
    }
}
